boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
setwd('')
setwd("")
install.packages("coala")
install.packages("phytools")
install.packages("coala")
intall("coala")
install.packages("coala")
install.packages("coala and phytools")
install.packages("coala")
install.packages("coala")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
install.packages("coala")
install.packages(phytools)
install.packages("phytools")
coala
install.packages("rehh", dep=T)
install.packages("assertthat", dep=T)
install.packages("phytools")
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal _model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal _model(sample_size = 5, loci _number = 10, loci _length = 500, ploidy = 2) +
feat _mutation(10) +
feat _recombination(10) +
sumstat _trees() +
sumstat _nucleotide_div()
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
install.packages("rehh", dep=T)
install.packages("assertthat", dep=T)
install.packages("RcppArmadillo", dep=T)
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz
", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz
", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz
", repos=NULL, type="source")
install.packages("phytools")
install.packages("coala")
install.packages("rehh", dep=T)
install.packages("assertthat", dep=T)
install.packages("RcppArmadillo", dep=T)
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz", repos=NULL, type="source")
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
model <- coala_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
coal_model
learnPopGen
coalescent.plot()
?coalescent.plot()
?coalescent.plot
??coalescent.plot
install.packages("phytools")
library(coala)
library(phytools)
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Diversity
#The numbers are all different. The difference comes from how different the individuals are at that locus.
Nloci <- length(stats$trees)
t1 <- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Age1 <- max(nodeHeights(t1))
t1
Age1
t2 <- read.tree(text=stats$trees[[2]][1])
t2
t2 <- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
axisPhylo()
compare.chronograms()
compare.chronograms(t1, t2)
t1_1 <- read.tree(text=stats$trees[[1]][1])
t1_2 <- read.tree(text=stats$trees[[1]][2])
compare.chronograms(t1_1, t1_2)
]
for (locus in 1:Nloci)  {
ntrees <- length(stats$trees[[locus]])
for (n in 1:ntrees) {
if (locus == 1 && n == 1) {
outPhy <- read.tree(text=stats$trees[[locus]][n])
}
else  {
outPhy <- ape:::c.plylo(outPhy, read.tree(text=stats$trees[[locus]][n]))
}
}
}
for (locus in 1:Nloci)  {
ntrees <- length(stats$trees[[locus]])
for (n in 1:ntrees) {
if (locus == 1 && n == 1) {
outPhy <- read.tree(text=stats$trees[[locus]][n])
}
else  {
outPhy <- ape:::c.phylo(outPhy, read.tree(text=stats$trees[[locus]][n]))
}
}
}
par(mfrow=c(1,1))
densityTree(outPhy)
densityTree
model3 <- coal_model(10, 50) +
feat_mutation(par_prior("theta", sample.int(100, 1))) +
sumstat_nucleotide_div()
stats <- simulate(model3, nsim = 40)
mean_pi <- sapply(stats, function(x) mean(x$pi))
theta <- sapply(stats, function(x) x$pars[["theta"]])
theta
mean_pi
stats
model3
t1 <- read.tree(text=stats$trees[[1]][1])
stats
tips
t1_1
Diversity
#Question 6: The number of tips and number of individuals may not match because of overlap?
plot(mean_pi)
plot(theta)
plot(mean_pi, theta)
add(regression_line)
?regression_line
??regression_line
plot(mean_pi, theta)
plot(mean_pi, theta)
axisPhylo()
library(phytools)
library(ape)
text.string<-
"(((((((cow, pig),whale),(bat,(lemur,human))), robin ,iguana)), coelacanth
),(gold_fish , trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree, edge.width=2)
vert.tree
?vert.tree
//vert.tree
??vert.tree
intall.packages("ape")
library(ape)
text.string<-
"(((((((cow, pig),whale),(bat,(lemur,human))), robin ,iguana)), coelacanth
),(gold_fish , trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree, edge.width=2)
vert.tree <- read.tree(text=text.string)
vert.tree <- read.tree(text=text.string)
library("phytools")
library("ape")
plot(vert.tree, edge.width=2)
text.string<-
"(((((((cow, pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth
),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
vert.tree
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E;")
tree<-read.tree(text="(((A,B),(C,D)),E;")
vert.tree
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E;")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelables(frame="circle", bg='white', cex=1)
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E;")
library("phytools")
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E;")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
library("phylo")
phylo
text.string<-
"(((((((cow, pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth
),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
vert.tree
str(vert.tree)
tree <- read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree <- force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0, 6))
tipEdges <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names(Lengths)[which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
text.string
vert.tree
tree
AnolisTree
tipEdges
Lengths
Labs
?plot.phylo
plot(x, type = "fan")
?plot.phylo
plot(x, type = "fan", use.edge.length = TRUE,
node.pos = NULL, show.tip.label = FALSE
show.node.label = FALSE, edge.color = NULL, edge.width
= NULL, edge.lty = NULL, node.color = NULL, node.width
= NULL, node.lty = NULL, font = 3, cex = par("0.25"),
adj = NULL, srt = 0, no.margin = FALSE, root.edge =
FALSE, label.offset = 0, underscore = FALSE, x.lim =
NULL, y.lim = NULL, direction = "rightwards", lab4ut =
NULL, tip.color = par("red"), plot = TRUE, rotate.tree
= 0, open.angle = 0, node.depth = 1, align.tip.label =
FALSE, ...)
plot(x, type = "fan", use.edge.length = TRUE,
node.pos = NULL, show.tip.label = FALSE,
show.node.label = FALSE, edge.color = NULL, edge.width
= NULL, edge.lty = NULL, node.color = NULL, node.width
= NULL, node.lty = NULL, font = 3, cex = par("0.25"),
adj = NULL, srt = 0, no.margin = FALSE, root.edge =
FALSE, label.offset = 0, underscore = FALSE, x.lim =
NULL, y.lim = NULL, direction = "rightwards", lab4ut =
NULL, tip.color = par("red"), plot = TRUE, rotate.tree
= 0, open.angle = 0, node.depth = 1, align.tip.label =
FALSE, ...)
plot(x, type = "fan", use.edge.length = TRUE,
node.pos = NULL, show.tip.label = FALSE,
show.node.label = FALSE, edge.color = NULL, edge.width
= NULL, edge.lty = NULL, node.color = NULL, node.width
= NULL, node.lty = NULL, font = 3, cex = par("0.25"),
adj = NULL, srt = 0, no.margin = FALSE, root.edge =
FALSE, label.offset = 0, underscore = FALSE, x.lim =
NULL, y.lim = NULL, direction = "rightwards", lab4ut =
NULL, tip.color = par("red"), plot = TRUE, rotate.tree
= 0, open.angle = 0, node.depth = 1, align.tip.label =
FALSE, ...)
plot(x, type = "fan", use.edge.length = TRUE,
node.pos = NULL, show.tip.label = FALSE,
show.node.label = FALSE, edge.color = NULL, edge.width
= NULL, edge.lty = NULL, node.color = NULL, node.width
= NULL, node.lty = NULL, font = 3, cex = par("0.25"),
adj = NULL, srt = 0, no.margin = FALSE, root.edge =
FALSE, label.offset = 0, underscore = FALSE, x.lim =
NULL, y.lim = NULL, direction = "rightwards", lab4ut =
NULL, tip.color = par("red"), plot = TRUE, rotate.tree
= 0, open.angle = 0, node.depth = 1, align.tip.label =
FALSE)
plot(x, type = "phylogram", use.edge.length = TRUE,
node.pos = NULL, show.tip.label = FALSE,
show.node.label = FALSE, edge.color = NULL, edge.width
= NULL, edge.lty = NULL, node.color = NULL, node.width
= NULL, node.lty = NULL, font = 3, cex = par("0.25"),
adj = NULL, srt = 0, no.margin = FALSE, root.edge =
FALSE, label.offset = 0, underscore = FALSE, x.lim =
NULL, y.lim = NULL, direction = "rightwards", lab4ut =
NULL, tip.color = par("red"), plot = TRUE, rotate.tree
= 0, open.angle = 0, node.depth = 1, align.tip.label =
FALSE)
warnings()
plot(x, type = "fan", use.edge.length = TRUE,
node.pos = NULL, show.tip.label = FALSE,
show.node.label = FALSE, edge.color = NULL, edge.width
= NULL, edge.lty = NULL, node.color = NULL, node.width
= NULL, node.lty = NULL, font = 3, cex = par("0.25"),
adj = NULL, srt = 0, no.margin = FALSE, root.edge =
FALSE, label.offset = 0, underscore = FALSE, x.lim =
NULL, y.lim = NULL, direction = "rightwards", lab4ut =
NULL, tip.color = ("red"), plot = TRUE, rotate.tree
= 0, open.angle = 0, node.depth = 1, align.tip.label =
FALSE)
warnings()
plot(x, type = "fan", node.pos = NULL, show.tip.label = FALSE,
show.node.label = FALSE, edge.color = NULL, edge.width
= NULL, edge.lty = NULL, node.color = NULL, node.width
= NULL, node.lty = NULL, font = 3, cex = par("0.25"),
adj = NULL, srt = 0, no.margin = FALSE, root.edge =
FALSE, label.offset = 0, underscore = FALSE, x.lim =
NULL, y.lim = NULL, direction = "rightwards", lab4ut =
NULL, tip.color = ("red"), plot = TRUE, rotate.tree
= 0, open.angle = 0, node.depth = 1, align.tip.label =
FALSE)
warnings()
= NULL, node.lty = NULL, font = 3, cex = par("0.25"),
adj = NULL, srt = 0, x.lim =
NULL, y.lim = NULL, lab4ut =
NULL, tip.color = ("red")
plot(x, type = "fan", node.pos = NULL, edge.color = NULL, edge.width= NULL, edge.lty = NULL, node.color = NULL, node.width= NULL, node.lty = NULL, font = 3, cex = par("0.25"), adj = NULL, srt = 0, x.lim = NULL, y.lim = NULL, lab4ut =NULL, tip.color = ("red")
plot(x, type = "fan", node.pos = NULL, edge.color = NULL, edge.width= NULL, edge.lty = NULL, node.color = NULL, node.width= NULL, node.lty = NULL, font = 3, cex = par("0.25"), adj = NULL, srt = 0, x.lim = NULL, y.lim = NULL, lab4ut =NULL, tip.color = ("red"))
plot(x, type = "phylogram", node.pos = NULL, edge.color = NULL, edge.width= NULL, edge.lty = NULL, node.color = NULL, node.width= NULL, node.lty = NULL, font = 3, cex = par("0.25"), adj = NULL, srt = 0, x.lim = NULL, y.lim = NULL, lab4ut =NULL, tip.color = ("red"))
plot.phylo
warnings()
library("phytools")
library("ape")
text.string <-
"(((((((cow, pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth
),(gold_fish, trout)),shark);"
vert.tree <- read.tree(text=text.srting)
vert.tree <- read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
str(vert.tree)
tree <- read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree <- force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="
edge lengths for the Anolis tree", ylim=c(0, 50), xlim=c(0, 6))
tipEdges <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths)[which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
tree1 <- (AnolisTree)
tree1
plot(tree1)
tree$tip.label
plot(tree1, type="fan")
plot(tree1, type="fan", col='red')
plot(tree1, type="fan", tip.col='red')
tree2 <- droptip()
tree2 <- drop.tip()
plot(tree1, tip.label = FALSE)
tree$tip.label
plot(tree1, type="fan")
plot(tree1, type="fan", tip.col='red')
tree1
tree1 <- (AnolisTree)
tree1
plot(tree1, tip.label = FALSE)
tree1 <- (AnolisTree, tip.label = FALSE)
tree1 <- (AnolisTree)
tree1
plot(tree1)
plot(tree1, type = "phylogram", tiplabels = FALSE)
tiplabels = FALSE
plot(tree1, show.tip.label = FALSE)
plot(tree1, type="fan")
plot(tree1, type="fan", tip.col='red')
plot(tree1, type="fan", tip.col='red')
which(shortest edge)
?which()
which(edge)
which(short edge = TRUE)
?which()
tree2 <- drop.tip(AnolisTree, 'Anolis_occultus')
plot(tree2)
plot(tree2, cex = 0.25)
ltt(AnolisTree)
abline(0, 1, lwd=2, col='red', lty=2)
fit.bd()
?fit.bd()
fit.bd(tree, b=NULL, d=NULL, rho=0.2)
fit.bd(tree2, b=NULL, d=NULL, rho=0.2)
ance the goldfish.
#Question 2: No
#Question 3: plot(tree1, show.tip.label = FALSE)
#Question 4: plot(tree1, type = "fan")
#Question 5: plot(tree1, type = "fan", tip.col='red')
#Question 6: Anolis occultus has shortest edge.
#Question 7: tree2 <- drop.tip(AnolisTree, 'Anolis_occultus)
#Question 8: plot(tree2, cex = 0.25)
#Question 9: The red line has a slope of 1 so it is not changing. The black line has a different pattern. The red one does not go down
#because of the slope.
#Question 10: fit.bd(tree2, b=NULL, d=NULL, rho=0.2)
library(phytools)
text.string <-
"(((((((cow, pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth
),(gold_fish, trout)),shark);"
vert.tree <- read.tree(text=text.string)
plot(tree, type="fan")
tree
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F
, row.names=1)
data
svl <- setNames(data$svl, rownames(data))
svl
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
Ancestors <- fastAnc(tree , svl , vars=TRUE, CI=TRUE)
Ancestors
((((((((((((((((((((((((((Papilionoidea)Obtectomera)Ditrysia)Heteroneura)Neolepidoptera)Glossata)Lepidoptera)Amphiesmenoptera)Endopterygota)Neoptera)Pterygota)Dicondylia)Insecta)Hexapoda)Pancrustacea)Mandibulata)Arthropoda)Panarthropoda)Ecdysozoa)Protostomia)Bilateria)Eumetazoa)Metazoa)Opisthokonta)Eukaryota)cellular_organisms);
make.tree(((((((((((((((((((((((((((Papilionoidea)Obtectomera)Ditrysia)Heteroneura)Neolepidoptera)Glossata)Lepidoptera)Amphiesmenoptera)Endopterygota)Neoptera)Pterygota)Dicondylia)Insecta)Hexapoda)Pancrustacea)Mandibulata)Arthropoda)Panarthropoda)Ecdysozoa)Protostomia)Bilateria)Eumetazoa)Metazoa)Opisthokonta)Eukaryota)cellular_organisms);)
setwd('C:\\Users\\britt\\Evolution\\Tasks\\Task_11')
?rnorm
x
summary(x)
y <- ((x*5)+2)+runif(100, 0, 0,1)
y <- ((x*5)+2)+runif(100, 0, 0.1)
plot(x,y)
y <- ((x*5)+2)+runif(100, 0, 0.1)
?runif
y <- ((x*5)+2)+runif(100, 0, 0.1)
y
plot(x,y)
abline(lm(y~x))
x <- rnorm(100, mean=5, sd=2)
summary(x)
x
y <- ((x*5)+2)+runif(100, 0, 0.1)
plot(x,y)
abline(lm(y~x))
coef(lm(y~x))
#The y-intercept is 2.035808. The slope is 5.002274. 2 and 5 were initially used
#when I formed the x object.
z <- c()
for(i in 1:100) {
z[i] <- runif(1, 0, 1)
y <- ((x*z[i])+2)runif(100, 0, 0.1)
mb <- coef(lm(y~z[1:100]))
}
for(i in 1:100) {
z[i] <- runif(1, 0, 1)
y <- ((x*z[i])+2)runif(100, 0, 0.1)
mb <- coef(lm(y~z[1:100]))
}
mb <- coef(lm(y~z[1:100]))
mb
for(i in 1:100) {
z[i] <- runif(1, 0, 1)
y <- ((x*z[i])+2)runif(100, 0, 0.1)
mb <- coef(lm(y~z[1:100]))
}
for(i in 1:100) {
z[i] <- runif(1, 0, 1)
y <- ((x*z[i])+2)runif(100, 0, 0.1)
mb <- coef(lm(y~z[1:100]))
}
for(i in 1:100) {
z[i] <- runif(1, 0, 1)
y <- ((x*z[i])+2)runif(100, 0, 0.1)
mb <- coef(lm(y~z[1:100]))
}
mb <- coef(lm(y~z[1:100]))
for(i in 1:100) {
z[i] <- runif(1, 0, 1)
y <- ((x*z[i])+2)runif(100, 0, 0.1)
mb <- coef(lm(y~z[1:100]))
}
#The y-intercept is 2.035808. The slope is 5.002274. 2 and 5 were initially used
#when I formed the x object.
z <- c()
for(i in 1:100) {
}
z[i] <- runif(1, 0, 1)
y <- ((x*z[i])+2)runif(100, 0, 0.1)
for(i in 1:100) {
z[i] <- runif(1, 0, 1)
y <- ((x*z[i])+2)+runif(100, 0, 0.1)
mb <- coef(lm(y~z[1:100]))
}
mb
plot(z, z[1:100])
#The trend of the line is the same for both graphs just on different scales.
#2
n <- 10000
prize <- sample(c("A","B", "C"), size=n, replace=TRUE)
open <- ifelse(prize=="A", sample(c("B", "C"), size=n, replace=TRUE), ifelse(prize=="B", "C", "B"))
notopen <- ifelse(open=="B", "C", "B")
same <- sum(prize=="A")/n
notsame <- sum(prize==notopen)/n
chanceWIN <- c(same, notsame)
barplot(chanceWIN, names.arg = c("no switch", "switch"), ylab="winning chance", main="Monty Hall Chance of Winning Fabululous Prize", col="red")
barplot(chanceWIN, names.arg = c("no switch", "switch"), ylab="winning chance", main="Monty Hall Chance of Winning Fabululous Prize", col="pink")
barplot(chanceWIN, names.arg = c("no switch", "switch"), ylab="winning chance", main="Monty Hall Chance of Winning Fabululous Prize", col="hotpink")
